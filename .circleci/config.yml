version: 2.1
jobs:

  build-docker-1804:
    docker:
      - image: ubuntu:18.04 # it is faster, do not support sudo? 
    # docker_layer_caching: true    # default - false # not permitted with docker

    steps:
      - checkout
      - run: echo "Build with ubuntu 18.04 Docker"
      - run:
          name: Performing 'apt-get update'
          command: 'apt-get update'
      - run: 
          name: Installing SUDO    
          command: 'apt-get install -y sudo'    
      - run:
          name: Installing GCC
          command: 'apt-get install -y gcc g++'
      - run:
          name: Testing GCC
          command: 'gcc --version && g++ --version'

      - run:
          name: Install CMAKE
          command: 'sudo apt-get install -y cmake'
      - run:
          name: Creating Build Files
          command: 'cmake -H. -Bbuild'
      - run:
          name: Creating Binary Files
          command: 'cmake --build build'
      - run:
          name: Point Unit Testing
          command: './bin/pointTest.x'
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
          - ~/circleci-demo-workflows

    #test:
    #  pre:
    #    - gcc --version
    #    - g++ --version
    #    - make --version  

  build-create-cache:
    docker:
     #- image: circleci/postgres:9.6.2
      - image: ubuntu:18.04 
    steps:
        - run:
            name: Installing CA certificates # To make cache work
            command: 'apt-get update && apt install -y ca-certificates'    
        - run:
            name: Installing GCC
            command: 'apt-get install -y gcc g++'
        - run:
            name: Testing GCC
            command: 'gcc --version && g++ --version'

        - save_cache:
            key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
            #key: v1-repo
            paths:
            - ~/circleci-demo-workflows


  build-use-cache:
    docker:
      # - image: ubuntu:18.04
      - image: circleci/ruby:2.4.1 #  preinstalled git, ssh, gzip, tar, ca-certificates, curl, wget

    steps:
      #- run:
      #    name: Installing CA certificates # To make cache work
      #    command: 'apt-get update && apt install -y ca-certificates'              
      - restore_cache: # Restores the cached dependency.
          key: 
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
            - v1-repo-  
      - run: echo "Build with cache restored"
      
     # - run: # need to search for correct path where packages are stored or select another docker
     #     name: Testing GCC
     #     command: 'gcc --version && g++ --version'


  build-machine-1604:
    machine:
      image: ubuntu-1604:201903-01 # no need to install sudo
      docker_layer_caching: true    # default - false
      # Note: You must open a support ticket to have a CircleCI Sales representative enable 
      # Docker Layer Caching on your circleci.com account for an additional fee. 
      # DLC is available by default for CircleCI installations hosted in your own datacenter
      # or private cloud

    #dependencies:
    #    pre:
    #     - sudo apt-get -y update

    steps:
      - checkout # checkout project source code into the jobâ€™s working_directory.
      - run: echo "Build with ubuntu 16.04 :201903-01 (LTS) Machine"
     # - run:
     #     name: Performing 'apt-get update'
     #     command: 'apt-get update'
     # - run: 
     #     name: Installing SUDO    
     #     command: 'apt-get install -y sudo'
      - run:
          name: Installing GCC
          command: 'sudo apt-get install -y gcc g++'
      - run:
          name: Install CMAKE
          command: 'sudo apt-get install -y cmake'
      - run:
          name: Creating Build Files
          command: 'cmake -H. -Bbuild'
      - run:
          name: Creating Binary Files
          command: 'cmake --build build'
      - run:
          name: Point Unit Testing
          command: './bin/pointTest.x'
     
     # test:
       # pre:
      #   - gcc --version
       #  - g++ --version
        # - make    

workflows:
  version: 2.1
  multiple-builds:
    jobs:
  # - build-docker-1804
      # - build-machine-1604

    - build-create-cache
    - build-use-cache:
        requires: 
        - build-create-cache